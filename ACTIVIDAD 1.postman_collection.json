{
	"info": {
		"_postman_id": "9700407e-b1f3-41c7-b8f8-a84665d649d9",
		"name": "ACTIVIDAD 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23204180"
	},
	"item": [
		{
			"name": "http://localhost:8000/api/employees",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/employees",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"employees"
					]
				},
				"description": "Devolverá un array JSON con el contenido del fichero \"employees.json\" que se adjunta al enunciado.\nEs posible añadirlo al código fuente con require('/path/to/employees.json') y guardarlo en una constante."
			},
			"response": []
		},
		{
			"name": "http://localhost:8000/api/employees?page=1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/employees?page=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"employees"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						}
					]
				},
				"description": "Devolverá los primeros 2 empleados. Del elemento 0 al elemento 1 del listado"
			},
			"response": []
		},
		{
			"name": "http://localhost:8000/api/employees?page=2",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/employees?page=2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"employees"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				},
				"description": "Devolverá del elemento 2 al elemento 3 del listado"
			},
			"response": []
		},
		{
			"name": "http://localhost:8000/api/employees?page=3",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/employees?page=3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"employees"
					],
					"query": [
						{
							"key": "page",
							"value": "3"
						}
					]
				},
				"description": "Devolverá del elemento (2 * (N - 1)) al (2 * (N - 1)) + 1."
			},
			"response": []
		},
		{
			"name": "http://localhost:8000/api/employees/oldest",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/employees/oldest",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"employees",
						"oldest"
					]
				},
				"description": "Devolverá el objeto individual correspondiente al empleado con más edad. En caso de existir más\nde uno, se devolverá la primera ocurrencia"
			},
			"response": []
		},
		{
			"name": "http://localhost:8000/api/employees?user=true",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/employees?user=true",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"employees"
					],
					"query": [
						{
							"key": "user",
							"value": "true"
						}
					]
				},
				"description": "Devolverá listado de employees con privileges == \"user\""
			},
			"response": []
		},
		{
			"name": "http://localhost:8000/api/employees",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Lisa\",\n  \"age\": 31,\n  \"phone\": {\n    \"personal\": \"837-123-123\",\n    \"work\": \"837-456-456\",\n    \"ext\": \"8989\"\n  },\n  \"privileges\": \"user\",\n  \"favorites\": {\n    \"artist\": \"Madonna\",\n    \"food\": \"pasta\"\n  },\n  \"finished\": [12, 2],\n  \"badges\": [\"green\", \"orange\"],\n  \"points\": [\n    {\n      \"points\": 90,\n      \"bonus\": 23\n    },\n    {\n      \"points\": 70,\n      \"bonus\": 8\n    }\n  ]\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/employees",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"employees"
					]
				},
				"description": "Añadirá un elemento al listado en memoria del programa (se perderá cada vez que se reinicie).\nSe validará que el body de la petición cumpla el mismo formato JSON que el resto de empleados.\nSi no cumpliera dicha validación, se devolverá status 400 con el siguiente contenido:\n\n{\"code\": \"bad_request\"}"
			},
			"response": []
		},
		{
			"name": "http://localhost:8000/api/employees?badges=black",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/employees?badges=black",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"employees"
					],
					"query": [
						{
							"key": "badges",
							"value": "black"
						}
					]
				},
				"description": "Devolverá listado de employees que incluya \"black\" en el atributo \"badges\""
			},
			"response": []
		},
		{
			"name": "http://localhost:8000/api/employees/Bob",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/employees/Bob",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"employees",
						"Bob"
					]
				},
				"description": "Devolverá objeto employee cuyo nombre sea igual a NAME. NAME puede tomar diferentes valores:\nSue, Bob, etc.\nSi no se encuentra el usuario con name == NAME se devolvera status 404 con el siguiente contenido:\n{\"code\": \"not_found\"}\n"
			},
			"response": []
		}
	]
}